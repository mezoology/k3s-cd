apiVersion: apps/v1
kind: Deployment
metadata:
  name: wiki
  labels:
    app: wiki
  namespace: default

spec:
  selector:
    matchLabels:
      app: 'wiki'

  revisionHistoryLimit: 10
  replicas: 1
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: 'wiki'
    spec:
      dnsPolicy: ClusterFirst
      containers:
        - name: wiki
          image: 'ghcr.io/requarks/wiki:2'
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          env:
            - name: DB_PASS
              value: wikijs
            - name: DB_NAME
              value: wikijs
            - name: DB_PORT
              value: '5432'
            - name: DB_USER
              value: wikijs
            - name: DB_TYPE
              value: postgres
            - name: DB_HOST
              value: wiki-db
          readinessProbe:
            failureThreshold: 3
            successThreshold: 1
            initialDelaySeconds: 0
            timeoutSeconds: 1
            periodSeconds: 10
            httpGet:
              scheme: HTTP
              path: /healthz
              port: 3000
          livenessProbe:
            failureThreshold: 3
            successThreshold: 1
            initialDelaySeconds: 0
            timeoutSeconds: 1
            periodSeconds: 10
            httpGet:
              scheme: HTTP
              path: /healthz
              port: 3000
          startupProbe:
            failureThreshold: 60
            successThreshold: 1
            initialDelaySeconds: 15
            timeoutSeconds: 1
            periodSeconds: 5
            httpGet:
              scheme: HTTP
              path: /healthz
              port: 3000
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - web
                topologyKey: kubernetes.io/hostname

---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: default
  name: wiki-db
  labels:
    app: db

spec:
  selector:
    matchLabels:
      app: 'db'

  revisionHistoryLimit: 10
  replicas: 1
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: 'db'
    spec:
      containers:
        - imagePullPolicy: Always
          name: wiki-db
          image: postgres:11-alpine
          env:
            - name: POSTGRES_DB
              value: wikijs
            - name: POSTGRES_PASSWORD
              value: wikijs
            - name: POSTGRES_USER
              value: wikijs
---
apiVersion: v1
kind: Service
metadata:
  name: wiki-db-srv
  namespace: default
spec:
  internalTrafficPolicy: Cluster
  ipFamilies:
  - IPv4
  ipFamilyPolicy: SingleStack
  ports:
  - name: dbport
    port: 5432
    protocol: TCP
    targetPort: 5432
  selector:
    app: db
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: wiki-srv
  namespace: default
spec:
  internalTrafficPolicy: Cluster
  ipFamilies:
  - IPv4
  ipFamilyPolicy: SingleStack
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 3000
  selector:
    app: wiki
  sessionAffinity: None
  type: ClusterIP
status:
  loadBalancer: {}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    field.cattle.io/publicEndpoints: '[{"port":80,"protocol":"HTTP","serviceName":"default:wiki","ingressName":"default:wiki","hostname":"wiki.lly.li","path":"/","allNodes":false}]'
  generation: 1
  name: wiki-ngrs
  namespace: default
spec:
  rules:
  - host: wiki.lly.li
    http:
      paths:
      - backend:
          service:
            name: wiki-srv
            port:
              number: 80
        path: /
        pathType: Prefix