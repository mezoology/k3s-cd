apiVersion: apps/v1
kind: Deployment
metadata:
  name: wiki
  annotations:
    {}
#    key: string
  labels:
    workload.user.cattle.io/workloadselector: apps.deployment-default-wiki
#    key: string
  namespace: default
spec:
  selector:
    matchLabels:
      workload.user.cattle.io/workloadselector: apps.deployment-default-wiki
  template:
    metadata:
      labels:
        workload.user.cattle.io/workloadselector: apps.deployment-default-wiki
    spec:
      containers:
        - imagePullPolicy: IfNotPresent
          name: wikijs
          image: ghcr.io/requarks/wiki:2
          ports:
            - name: http
              expose: true
              protocol: TCP
              containerPort: 80
              _serviceType: ClusterIP
              _ipam: dhcp
              _name: http
          env:
            - name: DB_TYPE
              value: postgres
            - name: DB_HOST
              value: db
            - name: DB_PORT
              value: '5432'
            - name: DB_USER
              value: wikijs
            - name: DB_PASS
              value: wikijs
            - name: DB_NAME
              value: wikijs
          __active: true
          readinessProbe:
            failureThreshold: 3
            successThreshold: 1
            initialDelaySeconds: 0
            timeoutSeconds: 1
            periodSeconds: 10
            httpGet:
              scheme: HTTP
              path: /healthz
              port: ''
          livenessProbe:
            failureThreshold: 3
            successThreshold: 1
            initialDelaySeconds: 0
            timeoutSeconds: 1
            periodSeconds: 10
            httpGet:
              scheme: HTTP
              port: ''
              path: /healthz
          startupProbe:
            failureThreshold: 60
            successThreshold: 1
            initialDelaySeconds: 15
            timeoutSeconds: 1
            periodSeconds: 5
            httpGet:
              scheme: HTTP
              path: /healthz
              port: ''
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      volumes:
  minReadySeconds: 0
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
#    type: RollingUpdate
#  paused: boolean
__clone: true
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wiki
  annotations:
    {}
#    key: string
  labels:
    workload.user.cattle.io/workloadselector: apps.deployment-default-wiki
#    key: string
  namespace: default
    spec:
      containers:
        - imagePullPolicy: Always
          name: db
          __active: true
          image: postgres:11-alpine
          env:
            - name: POSTGRES_DB
              value: wikijs
            - name: POSTGRES_PASSWORD
              value: wikijs
            - name: POSTGRES_USER
              value: wikijs
          __active: true
          readinessProbe:
            failureThreshold: 3
            successThreshold: 1
            initialDelaySeconds: 0
            timeoutSeconds: 1
            periodSeconds: 10
            httpGet:
              scheme: HTTP
              path: /healthz
              port: ''
          livenessProbe:
            failureThreshold: 3
            successThreshold: 1
            initialDelaySeconds: 0
            timeoutSeconds: 1
            periodSeconds: 10
            httpGet:
              scheme: HTTP
              port: ''
              path: /healthz
          startupProbe:
            failureThreshold: 60
            successThreshold: 1
            initialDelaySeconds: 15
            timeoutSeconds: 1
            periodSeconds: 5
            httpGet:
              scheme: HTTP
              path: /healthz
              port: ''
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      volumes:
  minReadySeconds: 0
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
#    type: RollingUpdate
#  paused: boolean
__clone: true